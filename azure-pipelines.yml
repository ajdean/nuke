# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [AzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

pr:
  none

stages:
  - stage: ubuntu_latest
    displayName: 'ubuntu-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: Test
        displayName: 'ðŸš¦ Test ðŸ§©'
        dependsOn: [  ]
        strategy:
          parallel: 2
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile Test --skip --partition $(System.JobPositionInPhase)/2'
          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: 'UbuntuLatest-Test'
              targetPath: 'output/test-results'
      - job: Pack
        displayName: 'ðŸ“¦ Pack'
        dependsOn: [  ]
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile DownloadLicenses Pack --skip'
          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: 'UbuntuLatest-Pack'
              targetPath: 'output/packages'
  - stage: windows_latest
    displayName: 'windows-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'windows-latest'
    jobs:
      - job: Test
        displayName: 'ðŸš¦ Test ðŸ§©'
        dependsOn: [  ]
        strategy:
          parallel: 2
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile Test --skip --partition $(System.JobPositionInPhase)/2'
          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: 'WindowsLatest-Test'
              targetPath: 'output/test-results'
      - job: Pack
        displayName: 'ðŸ“¦ Pack'
        dependsOn: [  ]
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile DownloadLicenses Pack --skip'
          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: 'WindowsLatest-Pack'
              targetPath: 'output/packages'
  - stage: macOS_latest
    displayName: 'macOS-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'macOS-latest'
    jobs:
      - job: Test
        displayName: 'ðŸš¦ Test ðŸ§©'
        dependsOn: [  ]
        strategy:
          parallel: 2
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile Test --skip --partition $(System.JobPositionInPhase)/2'
          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: 'MacOsLatest-Test'
              targetPath: 'output/test-results'
      - job: Pack
        displayName: 'ðŸ“¦ Pack'
        dependsOn: [  ]
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | global.json, source/**/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore Compile DownloadLicenses Pack --skip'
          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: 'MacOsLatest-Pack'
              targetPath: 'output/packages'
